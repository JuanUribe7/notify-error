AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: lambda-archetype

Resources:
  BreedsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Tracing: Active
      Environment:
        Variables:
          API_KEY: "d713ed90-5f08-45c4-a839-ea8e8d132a30"
          API_URL: "https://api.thecatapi.com/v1/breeds"
          NODE_ENVIRONMENT: "DEV"
          MYSQL_HOST: "localhost"
          MYSQL_USER: "userforlocal"
          MYSQL_PASSWORDL: "passwordforlocaluser"
          MYSQL_DATABASE: "databasename"
          MYSQL_PORT: "portnumberformysql"
          LOG_LEVEL: "INFO"
      Events:
        Breeds:
          Type: Api 
          Properties:
            Path: /breeds
            Method: get
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
        - app.ts

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BreedsApi:
    Description: API Gateway endpoint URL for Prod stage for Breeds function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/breeds/"
  BreedsFunction:
    Description: Breeds Lambda Function ARN
    Value: !GetAtt BreedsFunction.Arn
  BreedsFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt BreedsFunctionRole.Arn
